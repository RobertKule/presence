# Generated by Django 5.2.5 on 2025-08-24 08:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnneeUniversitaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Année universitaire',
                'verbose_name_plural': 'Années universitaires',
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True, verbose_name='Nom de la classe')),
                ('niveau', models.CharField(blank=True, choices=[('L0', 'Preparatoire'), ('L1', 'Licence 1'), ('L2', 'Licence 2'), ('L3', 'Licence 3'), ('M1', 'Master 1'), ('M2', 'Master 2')], max_length=10, null=True, verbose_name='Niveau')),
                ('capacite_max', models.PositiveIntegerField(default=30, verbose_name='Capacité maximale')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'ordering': ['niveau', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('admin', 'Administrateur'), ('enseignant', 'Enseignant')], default='enseignant', max_length=20, verbose_name='Rôle')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Adresse email')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Utilisateur',
                'verbose_name_plural': 'Utilisateurs',
                'ordering': ['username'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom du cours')),
                ('code', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Code du cours')),
                ('type_cours', models.CharField(choices=[('cours', 'Cours'), ('td', 'Travaux Dirigés'), ('tp', 'Travaux Pratiques'), ('projet', 'Projet')], default='cours', max_length=20, verbose_name='Type de cours')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('credit', models.PositiveIntegerField(default=3, verbose_name='Crédits')),
                ('volume_horaire', models.PositiveIntegerField(default=30, verbose_name='Volume horaire (heures)')),
                ('is_actif', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours', to='core.classe', verbose_name='Classe')),
                ('enseignant', models.ForeignKey(limit_choices_to={'role': 'enseignant'}, on_delete=django.db.models.deletion.CASCADE, related_name='cours_enseignant', to=settings.AUTH_USER_MODEL, verbose_name='Enseignant')),
            ],
            options={
                'verbose_name': 'Cours',
                'verbose_name_plural': 'Cours',
                'ordering': ['classe', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('matricule', models.CharField(max_length=20, unique=True, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Matricule')),
                ('nom', models.CharField(max_length=100, verbose_name='Nom')),
                ('prenom', models.CharField(max_length=100, verbose_name='Prénom')),
                ('sexe', models.CharField(blank=True, choices=[('M', 'Masculin'), ('F', 'Féminin')], max_length=1, null=True, verbose_name='Sexe')),
                ('date_naissance', models.DateField(blank=True, null=True, verbose_name='Date de naissance')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telephone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Téléphone')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='etudiants/', verbose_name='Photo')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etudiants', to='core.classe', verbose_name='Classe')),
            ],
            options={
                'verbose_name': 'Étudiant',
                'verbose_name_plural': 'Étudiants',
                'ordering': ['classe', 'nom', 'prenom'],
            },
        ),
        migrations.CreateModel(
            name='AbsenceJustifiee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('motif', models.TextField()),
                ('justificatif', models.FileField(upload_to='absences_justifiees/')),
                ('statut', models.CharField(choices=[('en_attente', 'En attente'), ('valide', 'Validé'), ('rejete', 'Rejeté')], default='en_attente', max_length=20)),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.etudiant')),
            ],
            options={
                'verbose_name': 'Absence justifiée',
                'verbose_name_plural': 'Absences justifiées',
            },
        ),
        migrations.CreateModel(
            name='Seance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date')),
                ('heure_debut', models.TimeField(verbose_name='Heure de début')),
                ('heure_fin', models.TimeField(verbose_name='Heure de fin')),
                ('salle', models.CharField(blank=True, max_length=50, null=True, verbose_name='Salle')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('is_annulee', models.BooleanField(default=False, verbose_name='Annulée')),
                ('motif_annulation', models.TextField(blank=True, null=True, verbose_name="Motif d'annulation")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seances', to='core.cours', verbose_name='Cours')),
            ],
            options={
                'verbose_name': 'Séance',
                'verbose_name_plural': 'Séances',
                'ordering': ['-date', 'heure_debut'],
            },
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('present', 'Présent'), ('retard', 'En retard'), ('absent', 'Absent'), ('motif', 'Absent avec motif')], default='absent', max_length=10, verbose_name='Statut')),
                ('heure_arrivee', models.TimeField(blank=True, null=True, verbose_name="Heure d'arrivée")),
                ('motif_absence', models.TextField(blank=True, null=True, verbose_name="Motif d'absence")),
                ('justificatif', models.FileField(blank=True, null=True, upload_to='justificatifs/', verbose_name='Justificatif')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presences', to='core.etudiant', verbose_name='Étudiant')),
                ('seance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presences', to='core.seance', verbose_name='Séance')),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
            },
        ),
        migrations.CreateModel(
            name='Semestre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('annee_universitaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.anneeuniversitaire')),
            ],
            options={
                'verbose_name': 'Semestre',
                'verbose_name_plural': 'Semestres',
            },
        ),
        migrations.AddIndex(
            model_name='cours',
            index=models.Index(fields=['code'], name='core_cours_code_95d1e9_idx'),
        ),
        migrations.AddIndex(
            model_name='cours',
            index=models.Index(fields=['enseignant'], name='core_cours_enseign_7359d4_idx'),
        ),
        migrations.AddIndex(
            model_name='cours',
            index=models.Index(fields=['classe'], name='core_cours_classe__e80657_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='cours',
            unique_together={('nom', 'classe', 'enseignant')},
        ),
        migrations.AddIndex(
            model_name='etudiant',
            index=models.Index(fields=['matricule'], name='core_etudia_matricu_994338_idx'),
        ),
        migrations.AddIndex(
            model_name='etudiant',
            index=models.Index(fields=['nom', 'prenom'], name='core_etudia_nom_8f419f_idx'),
        ),
        migrations.AddIndex(
            model_name='etudiant',
            index=models.Index(fields=['classe'], name='core_etudia_classe__f603ae_idx'),
        ),
        migrations.AddIndex(
            model_name='seance',
            index=models.Index(fields=['cours'], name='core_seance_cours_i_d67fa3_idx'),
        ),
        migrations.AddIndex(
            model_name='seance',
            index=models.Index(fields=['date'], name='core_seance_date_6849b3_idx'),
        ),
        migrations.AddIndex(
            model_name='presence',
            index=models.Index(fields=['etudiant', 'seance'], name='core_presen_etudian_cd6226_idx'),
        ),
        migrations.AddIndex(
            model_name='presence',
            index=models.Index(fields=['statut'], name='core_presen_statut_1f9a80_idx'),
        ),
        migrations.AddConstraint(
            model_name='presence',
            constraint=models.UniqueConstraint(fields=('etudiant', 'seance'), name='unique_presence'),
        ),
        migrations.AlterUniqueTogether(
            name='semestre',
            unique_together={('nom', 'annee_universitaire')},
        ),
    ]
